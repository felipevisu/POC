version: "3.8"

services:
  db:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: django
      POSTGRES_DB: booklist
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U django -d booklist" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  opensearch:
    image: opensearchproject/opensearch:2.17.1
    container_name: opensearch
    environment:
      - discovery.type=single-node
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
     - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://django:django@db:5432/booklist
      OPENSEARCH_DSL_HOSTS: http://opensearch:9200
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  opensearch_data: